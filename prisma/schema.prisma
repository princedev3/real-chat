
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  password String?
  createdAt             DateTime               @default(now())
  emailVerified         DateTime?
  chats Chat[]  @relation("ChatUsers")
  chatIds Int[]
  messages Message[]
   invitations Invitation[] @relation("CreatedBy")
}

model VerificationToken {
  id      String   @id @default(uuid())
  email   String
  token   String   @unique
  expires DateTime
  @@unique([email, token])
}
model PasswordResetToken {
  id      String   @id @default(uuid())
  email   String
  token   String   @unique
  expires DateTime
  @@unique([email, token])
}


model Chat {
  id     Int     @id @default(autoincrement())
  users  User[]  @relation("ChatUsers")
  userIds Int[]
  seenBy Int[]
  messages Message[]  
}

model Message {
  id        Int     @id @default(autoincrement())
  text  String
   userId Int
  chatId Int
  chat   Chat?   @relation(fields: [chatId], references: [id])
  user   User?   @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}

model Invitation {
  id         Int      @id @default(autoincrement())
  token      String   @unique
  createdBy  User     @relation("CreatedBy",fields: [createdById], references: [id])
  createdById Int
  recievedById Int?
  createdAt  DateTime @default(now())
  expiresAt  DateTime
  accepted   Boolean  @default(false)
  @@index([createdById, recievedById])
}

